@{ToDoContext db = new ToDoContext();}

@model CS3750P1.Models.EditListModel

@{
    ViewBag.Title = "View Lists";
}
<head>
    <style>
        /* The Modal (background) */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

        /* Modal Content */
        .modal-content {
            background-color: #fefefe;
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        /* The Close Button */
        .close {
            color: #aaaaaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
</head>

<div class="container">
        <h2 align="center">- @Model.listName -</h2>


        @using (Html.BeginForm("EditItems", "Home"))
        {
            <table class="table">
                <tr>
                    <th>
                        Item Name
                    </th>
                    <th>
                        Status
                    </th>
                    <th></th>
                </tr>
                @Html.HiddenFor(m => m.listName)
                @Html.HiddenFor(m => m.listID)
                @for (int i = 0; i < Model.items.Count; i++)
                {
                    <tr>
                        <td>
                            @Html.HiddenFor(m => m.items[i].itemID)
                            @Html.HiddenFor(m => m.items[i].dateCompleted)
                            @Html.HiddenFor(m => m.items[i].listID)
                            @Html.HiddenFor(m => m.items[i].isCompleted)
                            @Html.EditorFor(m => m.items[i].itemName)
                        </td>
                        @if (@Model.items[i].isCompleted == true)
                        {
                            <td>Done</td>
                        }
                        else
                        {
                            <td>Not Done</td>
                        }
                        <td>
                            <button type="submit" id="Complete" name="button" value=@Model.items[i].itemID onclick="@Model.changed = CompleteItem">Complete</button>
                        </td>
                    </tr>
                }
                </table>

                    <table class="catTable">
                        <tr>
                            <th>
                                Selected
                            </th>
                            <th>
                                Category
                            </th>
                            <th></th>
                        </tr>
                        @for (int i = 0; i < Model.categories.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Html.HiddenFor(m => m.categories[i].categoryName)
                                    @Html.HiddenFor(m => m.categories[i].id)
                                    @Html.CheckBoxFor(m => m.categories[i].Selected)
                                </td>
                                <td>
                                    @Html.DisplayFor(m => m.categories[i].categoryName)
                                </td>
                                <td>
                                    <button type="submit" id="Delete" name="button" value=Cat@Model.categories[i].id onclick="@Model.changed = DeleteCat">Delete</button>
                                </td>
                             </tr>
                        }

                    </table>
                <button type="submit" id="Update" name="button" value="Update">Save Changes</button>
            }
@*
    @if (Model.items != null)
    {
        <h2 align="center">- Categories -</h2>


            using (Html.BeginForm("UpdateCategories", "Home"))
            {
                <table class="table">
                    <tr>
                        <th>
                            Selected
                        </th>
                        <th>
                            Category
                        </th>
                        <th></th>
                    </tr>
                    @Html.HiddenFor(m => m.listName)
                    @Html.HiddenFor(m => m.listID)
                    @for (int i = 0; i < Model.categories.Count; i++)
                    {
                    <tr>
                        <td>
                            @Html.HiddenFor(m => m.categories[i].categoryName)
                            @Html.HiddenFor(m => m.categories[i].id)
                            @Html.HiddenFor(m => m.categories[i].Selected)
                            @Html.CheckBoxFor(m => m.categories[i].Selected)
                        </td>
                        <td>
                            @Html.DisplayFor(m => m.categories[i].categoryName)
                        </td>
                        <td>
                            <button type="submit" id="Delete" name="button" value=@Model.categories[i].id>Delete</button>
                        </td>
                    </tr>
                    }
                    @for (int i = 0; i < Model.items.Count; i++)
                    {
                    @Html.HiddenFor(m => m.items[i].itemID)
                    @Html.HiddenFor(m => m.items[i].itemName)
                    @Html.HiddenFor(m => m.items[i].listID)
                    @Html.HiddenFor(m => m.items[i].isCompleted)
                    }
                </table>
                <!-- Trigger/Open The Modal -->
                <button type="button" id="myBtn">Create Category</button>

                <!-- The Modal -->
                <div id="myModal" class="modal">

                    <!-- Modal content -->
                    <div class="modal-content">
                        <span class="close">&times;</span>
                        <input name="newCat" type="text" placeholder="New Category Name">
                        <button type="submit" id="Create" name="button" value="NewCat">Create</button>
                    </div>

                </div>

            }

    }*@
        
</div>

<script>
// Get the modal
var modal = document.getElementById('myModal');

// Get the button that opens the modal
var btn = document.getElementById("myBtn");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];

// When the user clicks the button, open the modal
btn.onclick = function() {
    modal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
    modal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
    if (event.target == modal) {
        modal.style.display = "none";
    }
}

</script>
