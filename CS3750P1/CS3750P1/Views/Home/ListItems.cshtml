@{ToDoContext db = new ToDoContext();}

@model CS3750P1.Models.EditListModel

@{
    ViewBag.Title = "View Lists";
}
<head>
    <style>
        /* The Modal (background) */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

        /* Modal Content */
        .modal-content {
            background-color: #fefefe;
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        /* The Close Button */
        .close {
            color: #aaaaaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
</head>

<div class="container">
        <h2 align="center">- @Model.listName -</h2>

    <div align ="center">
        @Html.ActionLink(linkText: "Delete This List", actionName: "DeleteListFromListView", controllerName: "Home", routeValues: new { listId = @Model.listID }, htmlAttributes: new { @class = "btn btn-danger btn-sm", onclick = "return confirm('You are about to delete list \"" + Model.listName + "\". Click \"OK\" to confirm.');" })
    </div>

@using (Html.BeginForm("EditItems", "Home"))
{
    <div class="row">
        <div class="col-md-4">
            <h2>Categories</h2>
            <table class="catTable">
                <tr>
                    <th>
                        Selected
                    </th>
                    <th>
                        Category
                    </th>
                    <th></th>
                </tr>
                @for (int i = 0; i < Model.categories.Count; i++)
                {
                    <tr>
                        <td>
                            @Html.HiddenFor(m => m.categories[i].categoryName)
                            @Html.HiddenFor(m => m.categories[i].id)
                            @Html.CheckBoxFor(m => m.categories[i].Selected)
                        </td>
                        <td>
                            @Html.DisplayFor(m => m.categories[i].categoryName)
                        </td>
                        <td>
                            <button type="submit" id="Delete" name="button" value=@Model.categories[i].id onclick="DeleteCat();">Delete</button>
                        </td>
                    </tr>
                }

            </table>
            <button type="button" id="newCatBtn">Create Category</button>

            <!-- The Modal -->
            <div id="myModal" class="modal">

                <!-- Modal content -->
                <div class="modal-content">
                    <span class="close">&times;</span>
                    <input name="newCat" type="text" placeholder="New Category Name">
                    <button type="submit" id="Create" name="button" value="NewCat">Create New Category</button>
                </div>

            </div>
        </div>
        <div class="col-md-8">
            <h2>Items</h2>
            <table class="table">
                <tr>
                    <th>
                        Item Name
                    </th>
                    <th>
                        Status
                    </th>
                    <th></th>
                </tr>
                @Html.HiddenFor(m => m.listName)
                @Html.HiddenFor(m => m.listID)
                @Html.HiddenFor(m => m.changed)
                @for (int i = 0; i < Model.items.Count; i++)
                {
                    <tr>
                        <td>
                            @Html.HiddenFor(m => m.items[i].itemID)
                            @Html.HiddenFor(m => m.items[i].dateCompleted)
                            @Html.HiddenFor(m => m.items[i].listID)
                            @Html.HiddenFor(m => m.items[i].isCompleted)
                            @Html.EditorFor(m => m.items[i].itemName)
                        </td>
                        @if (@Model.items[i].isCompleted == true)
                        {
                            <td>Done</td>
                        }
                        else
                        {
                            <td>Not Done</td>
                        }
                        <td>
                            <button type="submit" id="Complete" name="button" value=@Model.items[i].itemID onclick="CompleteItem();">Complete</button>
                        </td>
                    </tr>
                }

            </table>
            <button type="button" id="newItemBtn">New Todo</button>
            <div id="itemModal" class="modal">

                <!-- Modal content -->
                <div class="modal-content">
                    <span class="close">&times;</span>
                    <input name="newItem" type="text" placeholder="New Item Text">
                    <button type="submit" id="Create" name="button" value="NewItem">Submit</button>
                </div>

            </div>

        </div>
    </div>
    <br /><br />
    <button type="submit" id="Update" name="button" value="Update" align ="center" class="btn btn-success btn-block">Save Changes</button>
}

                    
                    
</div>

<script>
// Get the modal
var modal = document.getElementById('myModal');

// Get the button that opens the modal
var btn = document.getElementById("newCatBtn");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];

// When the user clicks the button, open the modal
btn.onclick = function() {
    modal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
    modal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
    if (event.target == modal) {
        modal.style.display = "none";
    }
}

// Get the modal
var modal2 = document.getElementById('itemModal');

// Get the button that opens the modal
var btn2 = document.getElementById("newItemBtn");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];

// When the user clicks the button, open the modal
btn2.onclick = function () {
    modal2.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function () {
    modal2.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function (event) {
    if (event.target == modal2) {
        modal2.style.display = "none";
    }
}

function CompleteItem(){
    document.getElementById("changed").value = "CompleteItem";
}

function DeleteCat() {
    document.getElementById("changed").value = "DeleteCat";
}

</script>